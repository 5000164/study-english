{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["IndexPage","render","siteTitle","lodash_get__WEBPACK_IMPORTED_MODULE_4___default","this","posts","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","props","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","charSet","lang","name","content","map","_ref","node","title","fields","slug","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","frontmatter","date","Component","__webpack_exports__","default","f","pageQuery","148","e","t","n","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","withPrefix","navigate","push","replace","navigateTo","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","c","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","object","string","isRequired","func","m","module","exports","Template","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","158","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_loader__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","pageResources","getResourcesForPathname","pathname","shape","l"],"mappings":"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","file":"component---src-pages-index-js-275de22084db27880dcc.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/layout'\n\nclass IndexPage extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <html lang=\"ja\" />\n          <title>{siteTitle}</title>\n          <meta name=\"description\" content=\"英語勉強用ブログ\" />\n        </Helmet>\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <Link to={node.fields.slug}>{title}</Link>\n              <div>{node.frontmatter.date}</div>\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY.MM.DD\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nclass Template extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>\n          <Link to={'/'}>英語勉強用ブログ</Link>\n        </h1>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}